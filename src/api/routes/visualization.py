'''
Visualization API routes for the IoT Network Digital Twin project.
This module defines the API endpoints for visualizing data related to the IoT network and digital twin
concepts.
'''

from fastapi import APIRouter, HTTPException
from dotenv import load_dotenv
from src.utils.utils import data_preprocessing

import pandas as pd
import os
import numpy as np

# Define environment variables
load_dotenv()
ESP32_REAL_DATA = os.getenv("ESP32_REAL_DATA_PATH")
ESP32_SIMULATED_DATA = os.getenv("ESP32_SIMULATED_DATA_PATH")

# Define the API router
router = APIRouter()

# Read the real and simulated data
real_data: pd.DataFrame = pd.read_csv(f"{ESP32_REAL_DATA}esp32_1_data.csv")
simulated_data: pd.DataFrame = pd.read_csv(f"{ESP32_SIMULATED_DATA}simulation_data_20250627_091821.csv")

# Define real data visualization endpoint
@router.get("/real")
async def visualize_real_data():
  '''
  Endpoint to visualize real data from the IoT network.
  This endpoint will return a visualization of the real data collected from the IoT devices.
  '''
  try:
    rssi_series, time_index = data_preprocessing(df=real_data, cols="rssi(dBm)", is_real=True)
    return {
      "data": rssi_series,
      "timestamp": time_index
    }
  except Exception as e:
    raise HTTPException(status_code=500, detail=str(e))

# Define simulated data visualization endpoint
@router.get("/simulated")
async def visualize_simulated_data():
  '''
  Endpoint to visualize simulated data from the IoT network.
  This endpoint will return a visualization of the simulated data generated by the digital twin model.
  '''
  try:
    return {
      "message": "Simulated data visualization endpoint is under construction."
    }
  except Exception as e:
    raise HTTPException(status_code=500, detail=str(e))